4.-

import java.util.ArrayList;

// La clase genérica ContenedorMain puede manejar pares de dos tipos F (primero) y S (segundo)
public class ContenedorMain<F, S> {

    // ArrayList que almacena pares de tipo Par<F, S>
    private ArrayList<Par<F, S>> pares;

    // Constructor que inicializa el ArrayList
    public ContenedorMain() {
        pares = new ArrayList<>();
    }

    // Método para agregar un nuevo par a la lista
    public void agregarPar(F primero, S segundo) {
        pares.add(new Par<>(primero, segundo)); // Se crea y agrega un nuevo Par a la lista
    }

    // Método para obtener un par de la lista basado en el índice
    public Par<F, S> obtenerPar(int indice) {
        // Verifica si el índice está dentro de los límites
        if (indice >= 0 && indice < pares.size()) {
            return pares.get(indice); // Retorna el par si el índice es válido
        } else {
            // Lanza una excepción si el índice está fuera de los límites
            throw new IndexOutOfBoundsException("Índice fuera de rango");
        }
    }

    // Método para obtener todos los pares almacenados
    public ArrayList<Par<F, S>> obtenerTodosLosPares() {
        return pares; // Retorna la lista completa de pares
    }

    // Método para mostrar todos los pares en la consola
    public void mostrarPares() {
        // Recorre y muestra cada par en la lista
        for (Par<F, S> par : pares) {
            System.out.println(par); // Llama al método toString de Par para mostrar el contenido
        }
    }

    // Método principal donde se ejecuta el programa
    public static void main(String[] args) {
        // Crea una instancia de ContenedorMain que manejará pares de tipo String e Integer
        ContenedorMain<String, Integer> contenedor = new ContenedorMain<>();

        // Agrega tres pares a la lista
        contenedor.agregarPar("Uno", 1);
        contenedor.agregarPar("Dos", 2);
        contenedor.agregarPar("Tres", 3);

        // Obtiene y muestra el par en el índice 1
        Par<String, Integer> par = contenedor.obtenerPar(1);
        System.out.println("Par en índice 1: " + par);

        // Muestra todos los pares en la lista
        System.out.println("Todos los pares:");
        contenedor.mostrarPares();
    }
}

// Clase Par que representa un par genérico de dos elementos
class Par<F, S> {
    // Variables para almacenar el primer y segundo valor del par
    private F primero;
    private S segundo;

    // Constructor que inicializa ambos valores del par
    public Par(F primero, S segundo) {
        this.primero = primero;
        this.segundo = segundo;
    }

    // Métodos getter y setter para acceder y modificar los valores del par
    public F getPrimero() {
        return primero;
    }

    public void setPrimero(F primero) {
        this.primero = primero;
    }

    public S getSegundo() {
        return segundo;
    }

    public void setSegundo(S segundo) {
        this.segundo = segundo;
    }

    // Sobrescribe el método toString para una representación legible del par
    @Override
    public String toString() {
        return "Par{" + "primero=" + primero + ", segundo=" + segundo + '}';
    }
}

