import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// AQUI SE CREA LA CLASE abstracta Persona
abstract class Persona {
    protected String nombre;
    protected String direccion;
    protected String email;

    // Constructor de la clase Persona
    public Persona(String nombre, String direccion, String email) {
        this.nombre = nombre;
        this.direccion = direccion;
        this.email = email;
    }

    // Metodo abstracto para mostrar informacion
    public abstract void mostrarInformacion();
}

// AQUI SE CREA LA CLASE Estudiante que hereda de Persona
class Estudiante extends Persona {
    private int codigoEstudiante;

    // Constructor de la clase Estudiante
    public Estudiante(String nombre, String direccion, String email, int codigoEstudiante) {
        super(nombre, direccion, email);
        this.codigoEstudiante = codigoEstudiante;
    }

    // Metodo para obtener el codigo del estudiante
    public int getCodigoEstudiante() {
        return codigoEstudiante;
    }

    // Metodo para mostrar la informacion del estudiante
    @Override
    public void mostrarInformacion() {
        System.out.println("Estudiante: " + nombre + ", Código: " + codigoEstudiante + ", Email: " + email);
    }
}

// AQUI SE CREA LA CLASE Profesor que hereda de Persona
class Profesor extends Persona {
    private String especialidad;

    // Constructor de la clase Profesor
    public Profesor(String nombre, String direccion, String email, String especialidad) {
        super(nombre, direccion, email);
        this.especialidad = especialidad;
    }

    // Metodo para obtener la especialidad del profesor
    public String getEspecialidad() {
        return especialidad;
    }

    // Metodo para mostrar la informacion del profesor
    @Override
    public void mostrarInformacion() {
        System.out.println("Profesor: " + nombre + ", Especialidad: " + especialidad + ", Email: " + email);
    }
}

// AQUI SE CREA LA CLASE Curso
class Curso {
    private String nombreCurso;
    private Profesor profesor;
    private List<Estudiante> estudiantes;
    private final String categoria;
    private final int maxEstudiantes;

    // Constructor de la clase Curso
    public Curso(String nombreCurso, Profesor profesor, String categoria, int maxEstudiantes) {
        this.nombreCurso = nombreCurso;
        this.profesor = profesor;
        this.categoria = categoria;
        this.maxEstudiantes = maxEstudiantes;
        this.estudiantes = new ArrayList<>();
    }

    // Metodo para obtener el nombre del curso
    public String getNombreCurso() {
        return nombreCurso;
    }

    // Metodo para obtener la categoria del curso
    public String getCategoria() {
        return categoria;
    }

    // Metodo para agregar un estudiante al curso
    public boolean agregarEstudiante(Estudiante estudiante) {
        if (estudiantes.size() < maxEstudiantes) {
            estudiantes.add(estudiante);
            return true;
        }
        return false;
    }

    // Metodo para mostrar la informacion del curso
    public void mostrarInformacion() {
        System.out.println("Curso: " + nombreCurso + ", Categoría: " + categoria + ", Profesor: " + profesor.nombre);
        System.out.println("Estudiantes inscritos:");
        for (Estudiante estudiante : estudiantes) {
            System.out.println("- " + estudiante.nombre);
        }
    }
}

// AQUI SE CREA LA CLASE SistemaGestion
class SistemaGestion {
    private List<Curso> cursos;

    // Constructor de la clase SistemaGestion
    public SistemaGestion() {
        this.cursos = new ArrayList<>();
    }

    // Metodo para agregar un curso al sistema
    public void agregarCurso(Curso curso) {
        cursos.add(curso);
    }

    // Metodo para mostrar todos los cursos del sistema
    public void mostrarCursos() {
        for (Curso curso : cursos) {
            curso.mostrarInformacion();
        }
    }
}

// Clase principal para probar el sistema
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Crear profesores
        System.out.print("Ingrese nombre del profesor 1: ");
        String nombreProf1 = scanner.nextLine();
        System.out.print("Ingrese direccion del profesor 1: ");
        String direccionProf1 = scanner.nextLine();
        System.out.print("Ingrese email del profesor 1: ");
        String emailProf1 = scanner.nextLine();
        System.out.print("Ingrese especialidad del profesor 1: ");
        String especialidadProf1 = scanner.nextLine();
        Profesor prof1 = new Profesor(nombreProf1, direccionProf1, emailProf1, especialidadProf1);

        System.out.print("Ingrese nombre del profesor 2: ");
        String nombreProf2 = scanner.nextLine();
        System.out.print("Ingrese direccion del profesor 2: ");
        String direccionProf2 = scanner.nextLine();
        System.out.print("Ingrese email del profesor 2: ");
        String emailProf2 = scanner.nextLine();
        System.out.print("Ingrese especialidad del profesor 2: ");
        String especialidadProf2 = scanner.nextLine();
        Profesor prof2 = new Profesor(nombreProf2, direccionProf2, emailProf2, especialidadProf2);

        // Crear cursos
        System.out.print("Ingrese nombre del curso 1: ");
        String nombreCurso1 = scanner.nextLine();
        System.out.print("Ingrese categoria del curso 1: ");
        String categoriaCurso1 = scanner.nextLine();
        System.out.print("Ingrese maximo de estudiantes del curso 1: ");
        int maxEstudiantesCurso1 = scanner.nextInt();
        scanner.nextLine(); // Limpiar el buffer
        Curso curso1 = new Curso(nombreCurso1, prof1, categoriaCurso1, maxEstudiantesCurso1);

        System.out.print("Ingrese nombre del curso 2: ");
        String nombreCurso2 = scanner.nextLine();
        System.out.print("Ingrese categoria del curso 2: ");
        String categoriaCurso2 = scanner.nextLine();
        System.out.print("Ingrese maximo de estudiantes del curso 2: ");
        int maxEstudiantesCurso2 = scanner.nextInt();
        scanner.nextLine(); // Limpiar el buffer
        Curso curso2 = new Curso(nombreCurso2, prof2, categoriaCurso2, maxEstudiantesCurso2);

        // Crear estudiantes
        System.out.print("Ingrese nombre del estudiante 1: ");
        String nombreEst1 = scanner.nextLine();
        System.out.print("Ingrese direccion del estudiante 1: ");
        String direccionEst1 = scanner.nextLine();
        System.out.print("Ingrese email del estudiante 1: ");
        String emailEst1 = scanner.nextLine();
        System.out.print("Ingrese codigo del estudiante 1: ");
        int codigoEst1 = scanner.nextInt();
        scanner.nextLine(); // Limpiar el buffer
        Estudiante est1 = new Estudiante(nombreEst1, direccionEst1, emailEst1, codigoEst1);

        System.out.print("Ingrese nombre del estudiante 2: ");
        String nombreEst2 = scanner.nextLine();
        System.out.print("Ingrese direccion del estudiante 2: ");
        String direccionEst2 = scanner.nextLine();
        System.out.print("Ingrese email del estudiante 2: ");
        String emailEst2 = scanner.nextLine();
        System.out.print("Ingrese codigo del estudiante 2: ");
        int codigoEst2 = scanner.nextInt();
        scanner.nextLine(); // Limpiar el buffer
        Estudiante est2 = new Estudiante(nombreEst2, direccionEst2, emailEst2, codigoEst2);

        // Agregar estudiantes a los cursos
        curso1.agregarEstudiante(est1);
        curso1.agregarEstudiante(est2);
        curso2.agregarEstudiante(est1);

        // Crear el sistema de gestion y agregar cursos
        SistemaGestion sistema = new SistemaGestion();
        sistema.agregarCurso(curso1);
        sistema.agregarCurso(curso2);

        // Mostrar los cursos del sistema
        sistema.mostrarCursos();
    }
}
